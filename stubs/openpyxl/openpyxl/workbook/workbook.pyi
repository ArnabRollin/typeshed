from typing import Any, Iterator

from openpyxl.chartsheet.chartsheet import Chartsheet
from openpyxl.styles.named_styles import NamedStyle
from openpyxl.worksheet.worksheet import Worksheet

INTEGER_TYPES: Any

class Workbook:
    template: bool
    path: str
    defined_names: Any
    properties: Any
    security: Any
    shared_strings: Any
    loaded_theme: Any
    vba_archive: Any
    is_template: bool
    code_name: Any
    encoding: str
    iso_dates: Any
    rels: Any
    calculation: Any
    views: Any
    def __init__(self, write_only: bool = ..., iso_dates: bool = ...) -> None: ...
    @property
    def epoch(self) -> Any: ...
    @epoch.setter
    def epoch(self, value: Any) -> None: ...
    @property
    def read_only(self) -> bool: ...
    @property
    def data_only(self) -> bool: ...
    @property
    def write_only(self) -> bool: ...
    @property
    def excel_base_date(self) -> Any: ...
    @property
    def active(self) -> Worksheet: ...
    @active.setter
    def active(self, value: Worksheet) -> None: ...
    def create_sheet(self, title: str | None = ..., index: int | None = ...): ...
    def move_sheet(self, sheet: Worksheet, offset: int = ...) -> None: ...
    def remove(self, worksheet: Worksheet) -> None: ...
    def remove_sheet(self, worksheet: Worksheet) -> None: ...
    def create_chartsheet(self, title: str | None = ..., index: int | None = ...) -> None: ...
    def get_sheet_by_name(self, name: str) -> Worksheet: ...
    def __contains__(self, key: str) -> bool: ...
    def index(self, worksheet: Worksheet) -> int: ...
    def get_index(self, worksheet: Worksheet) -> int: ...
    def __getitem__(self, key: str) -> Worksheet: ...
    def __delitem__(self, key: str) -> None: ...
    def __iter__(self) -> Iterator[Worksheet]: ...
    def get_sheet_names(self) -> list[Worksheet]: ...
    @property
    def worksheets(self) -> list[Worksheet]: ...
    @property
    def chartsheets(self) -> list[Chartsheet]: ...
    @property
    def sheetnames(self) -> list[str]: ...
    def create_named_range(
        self, name: str, worksheet: Worksheet | None = ..., value: str | Any | None = ..., scope: Any | None = ...
    ) -> None: ...
    def add_named_style(self, style: Any) -> None: ...
    @property
    def named_styles(self) -> list[NamedStyle]: ...
    def get_named_ranges(self) -> list[Any]: ...
    def add_named_range(self, named_range: Any) -> None: ...
    def get_named_range(self, name: Any) -> Any: ...
    def remove_named_range(self, named_range: Any) -> None: ...
    @property
    def mime_type(self) -> Any: ...
    def save(self, filename: str) -> None: ...
    @property
    def style_names(self) -> list[NamedStyle]: ...
    def copy_worksheet(self, from_worksheet: Worksheet) -> Worksheet: ...
    def close(self) -> None: ...
